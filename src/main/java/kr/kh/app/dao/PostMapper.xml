<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.kh.app.dao.PostDAO">

	<resultMap type="kr.kh.app.model.vo.PostVO" id="PostMap">
		<id property="post_id" column="post_id"/>
		<result property="post_board_num" column="post_board_num"/>
		<result property="post_title" column="post_title"/>
		<result property="post_content" column="post_content"/>
		<result property="post_date" column="post_date"/>
		<result property="post_view" column="post_view"/>
		<result property="post_upvotes" column="post_upvotes"/>
		<result property="post_reported" column="post_reported"/>
		<result property="post_user_id" column="post_user_id"/>
		<collection property="board" ofType="kr.kh.app.model.vo.BoardVO" column="post_board_num" select="selectBoard"></collection>
		<collection property="user" ofType="kr.kh.app.model.vo.UserVO" column="post_user_id" select="selectUser"></collection>
	</resultMap>

	<insert id="insertPost" useGeneratedKeys="true" keyProperty="post.post_id"> insert into
		post(post_board_num, post_title, post_content, post_date, post_user_id) values
		(#{post.post_board_num}, #{post.post_title}, #{post.post_content}, #{post.post_date},
		#{post.post_user_id}) </insert>

	<select id="selectBoardList" resultType="kr.kh.app.model.vo.BoardVO"> select * from board; </select>



	<select id="selectTotalPostCount" resultType="int"> 
		SELECT count(*) FROM post 
		JOIN board ON board_id = post_board_num
		LEFT JOIN blocked ON post_user_id = blocked_user_id AND blocking_user_id = #{cri.blocking_user_id}
		where blocked_user_id IS NULL and 
		post_title like concat('%', #{cri.search},'%') OR post_content like concat('%', #{cri.search},'%') 
	</select>

	<select id="selectTotalSearchResultList" resultType="kr.kh.app.model.vo.PostVO"> 
		<!-- SELECT post.* , board_name
		FROM post 
		JOIN board ON board_id = post_board_num
		where post_title like concat('%', #{cri.search},'%') OR post_content like concat('%', #{cri.search},'%')
		ORDER BY post_id DESC LIMIT
		#{cri.pageStart}, #{cri.perPageNum} -->
		SELECT post.*, board_name
		FROM post 
		JOIN board ON board_id = post_board_num
		LEFT JOIN blocked ON post_user_id = blocked_user_id AND blocking_user_id = #{cri.blocking_user_id}
		where blocked_user_id IS NULL and 
		post_title like concat('%', #{cri.search},'%') OR post_content like concat('%', #{cri.search},'%') 
		ORDER BY post_id DESC LIMIT
		#{cri.pageStart}, #{cri.perPageNum}
	 </select>


	<select id="selectBoard" resultType="kr.kh.app.model.vo.BoardVO">
		select * from board where board_id = #{post_board_num}
	</select>
	
	<select id="selectUser" resultType="kr.kh.app.model.vo.UserVO">
		select * from user where user_id = #{user_id}
	</select>
	
	<select id="selectTotalPostList" resultMap="PostMap">
		SELECT 
		    post.*,
		    board_name
		FROM
		    post
		        JOIN
		    board ON post_board_num = board_id
		GROUP BY post_id
		ORDER BY post_id desc
		LIMIT #{cri.pageStart}, #{cri.perPageNum}
	</select>
	
	<select id="selectTotalCount" resultType="int">
		select count(*) 
		from post
	</select>
	
	<select id="selectPost" resultMap="PostMap">
		select * from post where post_id = #{num}
	</select>
	
	<!-- 첨부파일 불러오기 -->
	<select id="selectFileByPost_id" resultType="kr.kh.app.model.vo.AttachVO"> 
		select * from attach where attach_post_id = #{num} and attach_link_check = 0
	</select>
	
	<!-- 링크 불러오기 -->
	<select id="selectLinkByPost_id" resultType="kr.kh.app.model.vo.AttachVO"> 
		select * from attach where attach_post_id = #{num} and attach_link_check = 1
	</select>
	
	<insert id="insertFile">
		insert into attach(attach_post_id, attach_link_check, attach_path)
		values(#{attach.attach_post_id}, "0", #{attach.attach_path})
	</insert>
	
	<insert id="insertLink">
		insert into attach(attach_post_id, attach_link_check, attach_path)
		values(#{attach.attach_post_id}, "1", #{attach.attach_path})
	</insert>
	
	<delete id="deletePost">
		delete from post where post_id = #{num}
	</delete>
	
	<delete id="deleteFile">
		delete from attach where attach_num = #{attach_num} and attach_link_check = 0
	</delete>
	
	<delete id="deleteLink">
		delete from attach where attach_post_id = #{attach.attach_post_id} and attach_link_check =1;
	</delete>
	
	<select id="selectFile" resultType="kr.kh.app.model.vo.AttachVO">
		select * from attach where attach_num = #{attach_num} and attach_link_check = 0
	</select>
	
	<select id="selectLink" resultType="kr.kh.app.model.vo.AttachVO">
		select * from attach where attach_num = #{num} and attach_link_check = 1 
	</select>
	
	<update id="updatePost">
		update post set
			post_title = #{post.post_title},
			post_content = #{post.post_content},
			post_board_num = #{post.post_board_num}
		where
			post_id = #{post.post_id}
	</update>
	
	<update id="updateAttach">
	    update attach set
	        attach_path = #{attach.attach_path},
	        attach_link_check = 1
	    where
	        attach_post_id = #{attach.attach_post_id} and attach_link_check = 1
	</update>

	<select id="selectTotalPopularViewPostList" resultType="kr.kh.app.model.vo.PostVO">
		SELECT 
			post.*,
			board_name
		FROM
			post
				JOIN
			board ON post.post_board_num = board.board_id
				LEFT JOIN 
			blocked ON post_user_id = blocked_user_id AND blocking_user_id = #{cri.blocking_user_id}
		WHERE blocked_user_id IS NULL and (post.post_date BETWEEN #{cri.endDate} AND #{cri.startDate})
		ORDER BY post_view desc
		LIMIT 10
	</select>

	<select id="selectTotalPopularLikePostList" resultType="kr.kh.app.model.vo.PostVO">
		SELECT 
			post.*,
			board_name
		FROM
			post
				JOIN
			board ON post.post_board_num = board.board_id
				LEFT JOIN 
			blocked ON post_user_id = blocked_user_id AND blocking_user_id = #{cri.blocking_user_id}
			WHERE blocked_user_id IS NULL and post.post_date BETWEEN #{cri.endDate} AND #{cri.startDate} 
		ORDER BY post_upvotes desc
		LIMIT 10
	</select>
	
	
	<select id="selectAttachPath" resultType="kr.kh.app.model.vo.AttachVO">
			select * from attach
			where attach_post_id = #{attach_post_id} and attach_link_check = 1
	</select>


	<select id="selectReportedPostCount" resultType="int"> 
		select count(*) from post where post_reported > 9 
	</select>
	
	<select id="selectReportedPostList" resultType="kr.kh.app.model.vo.PostVO">

		SELECT 
			post.*,
			board.board_name,
			report.report_date
		FROM
			post
			JOIN board ON post.post_board_num = board.board_id
			JOIN report ON post.post_id = report.report_post_id
		WHERE post.post_reported > 9
		ORDER BY report.report_date DESC
		LIMIT #{cri.pageStart}, #{cri.perPageNum}

	</select>

	
	<insert id="insertLike">
		insert into upvote(post_id, user_id, upvote) 
		values (#{like.post_id},#{like.user_id},#{like.upvote})
	</insert>
	
	<select id="selectLike" resultType="kr.kh.app.model.vo.UpvoteVO">
		select * from upvote where post_id = #{post_id} and user_id = #{user_id}
	</select>
	
	<update id="updateLike">
		update upvote set upvote = #{like.upvote} where post_id = #{like.post_id} and user_id = #{like.user_id}
	</update>
	
	<update id="updatePostView">
		update post set post_view = post_view + 1 where post_id = #{num}
	</update>
	
	<update id="updatePostUpvotePlus">
		update post post
		inner join upvote upvote
		on post.post_id = upvote.post_id
	    set post_upvotes = post_upvotes + 1 
		where post.post_id = #{num} and upvote.upvote = 1;
	</update>
	
	<update id="updatePostUpvoteMinus">
		update post post
		inner join upvote upvote
		on post.post_id = upvote.post_id
	    set post_upvotes = post_upvotes - 1 
		where post.post_id = #{num} and upvote.upvote = 0;
	</update>
	<insert id="insertComment">
		insert into comment(comment_post_num, comment_content, comment_user_id, comment_date)
		values(#{co.comment_post_num},#{co.comment_content},#{co.comment_user_id}, now())
	</insert>
	
	<select id="selectCommentList" resultType="kr.kh.app.model.vo.CommentVO">
		select * from comment 
		where comment_post_num = #{cri.post_num}
		order by comment_id desc
		limit #{cri.pageStart}, #{cri.perPageNum}
	</select>
	
	<select id="selectTotalCountComment" resultType="int">
		select count(*) from comment
		where comment_post_num = #{cri.post_num}
	</select>
	
	<select id="selectComment" resultType="kr.kh.app.model.vo.CommentVO">
		select * from comment where comment_id = #{comment_id}
	</select>
	
	<delete id="deleteComment">
		delete from comment where comment_id = #{comment_id}
	</delete>
	
	<update id="updateComment">
		update comment set comment_content = #{co.comment_content} where comment_id = #{co.comment_id}
	</update>


	<select id="selectPostReportedListCount" resultType="int">
		select count(*) from report where report_post_id = #{cri.reportedPostId}
	</select>
	
	<select id="selectPostReportedList" resultType="kr.kh.app.model.vo.ReportVO">
		select * from report where report_post_id = #{cri.reportedPostId}
		order by report_date desc
		limit #{cri.pageStart}, #{cri.perPageNum}
	</select>
	
</mapper>